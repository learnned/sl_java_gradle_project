/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version "4.15.1"
}

group = "demo"
version = "1.0.0"

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation 'org.testng:testng:7.2.0'
}

application {
    // Define the main class for the application.
    mainClassName = 'sl_java_gradle_project.App'
}

test {
    // Use TestNG for unit tests
    useTestNG()
}

jar {
    manifest {
        attributes  'Main-Class': "${project.name}.App"
    }
}

task uncompressZip (type: Copy){
    description 'This task uncompress build file'
    def zipFile = file("build/distributions/${project.name}.zip")
    def outputDir = file("${buildDir}/output/zip/")
    from zipTree(zipFile)
    into outputDir
}

task uncompressTar (type: Copy){
    description 'This task uncompress build file'
    def tarFile = file("build/distributions/${project.name}.tar")
    def outputDir = file("${buildDir}/output/tar")
    from tarTree(tarFile)
    into outputDir
}

task runExecuteJarFromFileTar (type: Exec, dependsOn: 'uncompressTar'){
    def jarFile = "${buildDir}/output/tar/${project.name}/lib/${project.name}.jar"
    commandLine "bash", "-c", "java -jar ${jarFile}"
}

task runExecuteJarFromFileZip (type: Exec, dependsOn: 'uncompressZip'){
    def jarFile = "${buildDir}/output/zip/${project.name}/lib/${project.name}.jar"
    commandLine "bash", "-c", "java -jar ${jarFile}"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'gradle-dev-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
        defaults {
            publications ('mavenJava')
        }
    }
    resolve {
        repository {
            repoKey = 'gradle-dev'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}







//build.finalizedBy(runExecuteJarFromFileZip)
//build.finalizedBy(runExecuteJarFromFileTar)

